# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# Will make some changes later. Start build ..
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs: 
  # say-hello: 
  #   docker:
  #     - image: cimg/node:13.8.0

  #   steps:
  #     - checkout
  #     - run: echo Hello World!
  # create-infrastructure:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker:
  #   # docker image for amazon aws-cli
  #     - image: amazon/aws-cli
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - checkout
  #     - run:
  #         name: create cloudformation stack
  #         command: |
  #           aws cloudformation create-stack --stack-name infraserver-stack --template-body file://infra-server.yml --parameters file://infra-server-params.json --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM" --region=us-west-2

  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11 
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["b2:94:1f:e9:69:98:66:41:3d:51:94:44:99:bf:96:fb"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i [inventory.txt] [main-remote.yml]

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
    #   - say-hello
    #   - create-infrastructure:
    #       requires:
    #         - say-hello
      - configure_infrastructure

